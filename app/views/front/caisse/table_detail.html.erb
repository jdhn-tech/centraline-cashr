<div id="table_detail" class="content">
	<div class="content_Table_Detail">
		<table id='Table_Detail' class='table table-scroll table-striped'>
			<thead>
				<tr>
					<th colspan="5">Ref : <%=@note.reference%><br>N° Table : <%=@table.table_number.to_s.rjust(2,'0')%></th>
					<th colspan="2" rowspan="2"><button class="btn" onclick="toggleTableDetail()">Menus</button>
						<input type="text" list="AllArticlesCode" id="Article-input" placeholder="Chercher Menu par code" autocomplete="on">
						<!-- <input type="text" id="Article-input" placeholder="Chercher Menu par code"> -->
						<datalist id="AllArticlesCode">
								<% Menu.all.map(&:code).each do |code| %>
									<option value=<%=code%> >
								<% end %>
								<% Article.all.map(&:code).each do |code| %>
									<option value=<%=code%>>
								<% end %>
						</datalist> 
					</th> 
				</tr>
				<tr>
					<th style="width:10%">Code</th>
					<th style="width:10%">Nom</th>
					<th style="width:10%">Prix Unité</th>
					<th style="width:45%">Note</th>
					<th style="width:10%">Etat</th>
				</tr>
			</thead>
			
			<tbody id='table_detail_note'>
				<% @note.note_entries.each do |entry| %>
					<tr id="entry<%=entry.id%>">
						
						<td class='table_note_code'><%=entry.getCode%></td>
						<td><%=entry.getName%></td>
						<td class='table_note_price'><%=entry.value.to_f / 100%> €</td>
						<td>
							<button type='button' class='btn btn-default btn-lg' onClick='addNotice(this, <%=entry.id%>)'><span class='glyphicon glyphicon glyphicon-plus'></span></button> <%=entry.notices.join(" ; ")%>
						</td>
						<td><%=entry.status%></td>
						<td>
							<button type='button' class='btn btn-default btn-lg' onClick='duplicateLineNote(this, <%=entry.id%>)'><span class='glyphicon glyphicon-duplicate'></span></button>
						</td>
						<td>
							<button type='button' class='btn btn-default btn-lg' onClick='removeLineNote(this, <%=entry.id%>)'><span class='glyphicon glyphicon-trash'></span></button>
						</td>
					</tr>
				<% end %>
			</tbody>
			<tfoot>
				<tr>
					<th colspan="7" id="table_note_sum">Somme = <%=@note.getTotal.to_f / 100%> €</th>
				</tr>
			</tfoot>
		</table>
	</div>
	<table id='Table_Bottom' class='Table_Bottom'>
		<tr style="height:50px;">
			<td><a class="btn" href="/front/edition_liste/<%=@note.id%>">Edition liste</a></td>
			<td><a class="btn" href="/front/edition_client">Edition Client</a></td>
			<td><a class="btn" href="/front/encaisser/<%=@note.id%>">Encaisser</a></td>
			<td><a class="btn" href="/front/annulation/<%=@table.id%>">Annulation</a></td>
		</tr>
	</table>	
</div>

<%= render "table_book" %>
<%= render "keyboard_notice" %>
<%= render "keyboard_number" %>

<script >
var table_detail_line = "<tr id='entry%ENTRY_ID%'><td class='table_note_code'>%CODE%</td><td>%NOM%</td><td class='table_note_price'>%PRIX%</td><td><button type='button' class='btn btn-default btn-lg' onclick='addNotice(this, %ENTRY_ID%)'><span class='glyphicon glyphicon glyphicon-plus' aria-hidden='true'></span></button>%NOTE%</td><td>%ETAT%</td><td><button type='button' class='btn btn-default btn-lg' onclick='duplicateLineNote(this, %ENTRY_ID%)'><span class='glyphicon glyphicon-duplicate' aria-hidden='true'></span></button></td><td><button type='button' class='btn btn-default btn-lg' onClick='removeLineNote(this, %ENTRY_ID%)'><span class='glyphicon glyphicon-trash' aria-hidden='true'></span></button></td></tr>";
notice_entry_id = 0;
function toggleTableDetail() {
	if ($("#table_detail").is(":visible")) {
		$("#table_detail").hide();
		$("#table_book").show();
	} else {
		$("#table_detail").show();
		$("#table_book").hide();
	}
}
function duplicateLineNote(e, entry_id) {
	var thisLine = $(e).parent().parent();
	console.log(thisLine);
	$.ajax({
		async: false,
		url: "/front/notes/<%=@note.id%>/clone_entry/"+entry_id,
		type: "GET",
		success : function(data) {
			var line = table_detail_line.replace('%CODE%', data["code"]);
			line = line.replace('%NOM%', data["name"]);
			line = line.replace('%PRIX%', data["price"] / 100 + ' €');
			line = line.replace('%NOTE%', data["notice"]);
			line = line.replace('%ETAT%', data["status"]);
			line = line.replace(/%ENTRY_ID%/g, data["entry_id"]);
			$("#table_detail_note").append(line);
			updateSum();
		}
	})
}
function removeLineNote(e, entry_id) {
	$.ajax({
		async: false,
		url: "/front/notes/<%=@note.id%>/remove_entry/"+entry_id,
		type: "GET",
		success : function(data) {
			$(e).parent().parent().remove();
			updateSum();
		}
	})
}
function updateSum() {
	var sum = 0;
	$(".table_note_price").each(function(i,obj) {
		sum += parseFloat($(obj).text());
	});
	$("#table_note_sum").text("Somme = "+sum+" €");
}

function addNotice(e, entry_id) {
	$('#modalAddNotice').modal('show');
	var rowIndex = $(e).closest('tr').index();
	notice_entry_id = entry_id;
	$('#modalAddNotice #hide_tableIndex').val(rowIndex);
	$("#modalAddNotice").modal("show");
}

$("#Article-input").on('input', function () {
    var code = this.value;
    if($('#AllArticlesCode').find('option').filter(function(){
        return this.value.toUpperCase() === code.toUpperCase();        
    }).length) {
        $.ajax({
			async: false,
			url: "/front/notes/<%=@note.id%>/create_entry/"+code,
			type: "GET",
			success : function(data) {
				var line = table_detail_line.replace('%CODE%', data["code"]);
				line = line.replace('%NOM%', data["name"]);
				line = line.replace('%PRIX%', data["price"] / 100 + ' €');
				line = line.replace('%NOTE%', data["notice"]);
				line = line.replace('%ETAT%', data["status"]);
				line = line.replace(/%ENTRY_ID%/g, data["entry_id"]);
				$("#table_detail_note").append(line);
				updateSum();
				$("#Article-input").val('');
			}
		});
    }
});


$(function(){
	var menus_code = [
		<% Menu.all.map(&:code).each do |code| %>
			"<%=code%>",
		<% end %>
		<% Article.all.map(&:code).each do |code| %>
			"<%=code%>",
		<% end %>
  	];

	$('#keyboard_number li').click(function(){
		var $this = $(this)
		var character = $this.html(); 
		// Delete
		if ($this.hasClass('delete')) {
			var input=document.getElementById('Article-input').value;
			document.getElementById('Article-input').value=input.substr(0, input.length - 1);
		}else{
			document.getElementById('Article-input').value+=character;
		}
		var temp_menu = [];
		var toto=document.getElementById('Article-input').value;
		menus_code.forEach(function(el,i){
			if(el.match(toto)){
				temp_menu.push(el);
				codeOption = "<option value=\"" + el + "\">";
            	$('#AllArticlesCode').append(codeOption);
			};
		})
	});
});

// $(function() {
// 	var availableTags = [
// 		<%# Menu.all.map(&:code).each do |code| %>
// 			"<%#=code%>",
// 		<%# end %>
// 		<%# Article.all.map(&:code).each do |code| %>
// 			"<%#=code%>",
// 		<%# end %>
//   ];
//   $("#write_Number").autocomplete({
//     source: availableTags,
//   });

//   var $write = $('#write_Number');

//   $('#keyboard_number li').click(function() { //kollar hur keyboard skall se ut från keyboard li style.css
//     var $this = $(this),
//       character = $this.html(); // If it's a lowercase letter, nothing happens to this variable

//     // Delete
//     if ($this.hasClass('delete')) {
//       var html = $write.html(),
//         txt = html.substr(0, html.length - 1);
//       $write.html(txt);
//       $write.autocomplete("search", txt);
//       return false;
//     }

//     // Add the character
//     var txt = $write.html() + character;
//     $write.html(txt);
//     $write.autocomplete("search", txt);
//   });
// });

</script>